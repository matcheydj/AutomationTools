<?xml version="1.0"?>
<Vulnerability xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Lang="ENU" Vul_ID="FileVaultActivation-10" Revision="62">
  <Status>Enabled</Status>
  <Groups />
  <DependsOn />
  <Patches>
    <Patch Download="DManual" Silent="CRSNo" Reboot="RNo" UniqueFilename="*FileVaultActivation-10_detect and remediate disabled FileVault" Hash="" Sha1="" Sha256="" Size="0">
      <Name>detect and remediate disabled FileVault</Name>
      <Advanced>
        <DetectScript>#!/bin/bash
/usr/bin/fdesetup isactive

if [ $?  -ne 0 ]; then
  echo "Found: Unencrypted drive"
  echo "Reason: FileVault not active"
  echo "Expected: FileVault active"
  echo "Detected:1"
else
  echo "Detected:0"
fi
</DetectScript>
      </Advanced>
      <Comments />
      <URL />
      <State>Enabled</State>
      <RunAsUser>false</RunAsUser>
      <DisableWow64Redirect>false</DisableWow64Redirect>
      <UACElevation>false</UACElevation>
      <Files />
      <RegKeys />
      <Products />
      <Platforms>
        <ID>macosx</ID>
        <ID>macosxserver</ID>
      </Platforms>
      <UninstallInfo>
        <canBeUninstalled>false</canBeUninstalled>
        <requiresOriginalPatch>false</requiresOriginalPatch>
        <RunAsUser>false</RunAsUser>
        <DisableWow64Redirect>false</DisableWow64Redirect>
        <UACElevation>false</UACElevation>
      </UninstallInfo>
      <Cmds>
        <Cmd Type="ShellScript">
          <Args>
            <Arg N="ScriptCode" V="#!/bin/bash&#xD;&#xA;&#xD;&#xA;echo `/bin/date` &quot;enabling FileVault with defer option&quot;&#xD;&#xA;&#xD;&#xA;recoveryHD=&quot;NO&quot;&#xD;&#xA;&#xD;&#xA;coreStorage=&quot;NO&quot;&#xD;&#xA;&#xD;&#xA;atLeastYosemite=&quot;NO&quot;&#xD;&#xA;atLeast10103=&quot;NO&quot;&#xD;&#xA;&#xD;&#xA;systemMajorVersion=`sw_vers | grep &quot;ProductVersion:&quot; | cut -d ':' -f 2 | cut -d '.' -f 2`&#xD;&#xA;&#xD;&#xA;systemMinorVersion=`sw_vers | grep &quot;ProductVersion:&quot; | cut -d ':' -f 2 | cut -d '.' -f 3`&#xD;&#xA;if [ $systemMajorVersion -eq 10 ]; then&#xD;&#xA;&#xD;&#xA;atLeastYosemite=&quot;YES&quot;&#xD;&#xA;if [ $systemMinorVersion -ge 3 ]; then&#xD;&#xA;atLeast10103=&quot;YES&quot;&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;&#xD;&#xA;elif [ $systemMajorVersion -gt 10 ]; then&#xD;&#xA;&#xD;&#xA;atLeastYosemite=&quot;YES&quot;&#xD;&#xA;atLeast10103=&quot;YES&quot;&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;deferFile=`diskutil info / | grep &quot;Volume Name:&quot; | cut -d ':' -f 2 | sed -e 's/^ *//' -e 's/ *$//'`&#xD;&#xA;diskutil cs info /&#xD;&#xA;if [ $?  -eq 0 ]; then&#xD;&#xA;coreStorage=&quot;YES&quot;&#xD;&#xA;&#xD;&#xA;echo &quot;CoreStorage&quot;&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;diskutil list | grep &quot;Recovery HD&quot;&#xD;&#xA;if [ $?  -eq 0 ]; then&#xD;&#xA;recoveryHD=&quot;YES&quot;&#xD;&#xA;&#xD;&#xA;echo &quot;Recovery HD&quot;&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;&#xD;&#xA;echo &quot;CoreStorage = &quot; $coreStorage&#xD;&#xA;&#xD;&#xA;echo &quot;Recovery HD = &quot; $recoveryHD&#xD;&#xA;if [ &quot;$coreStorage&quot; == &quot;NO&quot; ]; then&#xD;&#xA;if [ &quot;$recoveryHD&quot; == &quot;NO&quot; ]; then&#xD;&#xA;&#xD;&#xA;echo `/bin/date` &quot;Boot Volume is not a CoreStorage Volume, and there is no Recovery HD, so FileVault cannot be enabled.&quot;&#xD;&#xA;&#xD;&#xA;/Library/Application\ Support/LANDesk/bin/ldnotify -m &quot;Ivanti ldms cannot enable FileVault for the volume $deferFile on this device because $deferFile is not a Core Storage volume, and there is no Recovery HD&quot; -y &quot;OK&quot; -p &quot;FileVault has not been enabled&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;exit 1&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;deferFile=`diskutil info / | grep &quot;Volume Name:&quot; | cut -d ':' -f 2 | sed -e 's/^ *//' -e 's/ *$//'`&#xD;&#xA;if [ &quot;$atLeast10103&quot; == &quot;YES&quot; ]; then&#xD;&#xA;sudo fdesetup enable -defer &quot;/Library/Application Support/LANDesk/data/$deferFile-fv2recovery.plist&quot;  -dontaskatlogout -forceatlogin 0&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;sudo fdesetup enable -defer &quot;/Library/Application Support/LANDesk/data/$deferFile-fv2recovery.plist&quot;&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;if [ $?  -ne 0 ]; then&#xD;&#xA;&#xD;&#xA;echo `/bin/date` &quot;fdesetup enable -defer failed&quot;&#xD;&#xA;&#xD;&#xA;exit 1&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;echo `/bin/date` &quot;setting up submit to core of the FileVauilt2RecoveryKey&quot;&#xD;&#xA;sudo /Library/Application\ Support/LANDesk/bin/ldsubmitclientdata -dataname=&quot;FileVauilt2RecoveryKey&quot; -d -retry=20 -datafile=&quot;/Library/Application Support/LANDesk/data/$deferFile-fv2recovery.plist&quot;&#xD;&#xA;/Library/Application\ Support/LANDesk/bin/ldnotify -m &quot;Ivanti ldms has enabled FileVault for the volume $deferFile on this device. Restart this device as soon as possible to complete the process.&quot; -y &quot;OK&quot; -p &quot;FileVault has been enabled&quot;&#xD;&#xA;&#xD;&#xA;exit 0&#xD;&#xA;&#xD;&#xA;fi&#xD;&#xA;" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
  </Patches>
  <PublishDate>2015-08-25T14:10:11-06:00</PublishDate>
  <Title>FileVault Activation version 1.1</Title>
  <Description>Basic detect and remediation content to manage FileVault on Mac OS X client devices with the LDMS Agent installed.

The device control required in this process is done through the command line tool fdesetup. For info on fdesetup and all of its options, see the man page. For more info on its use, see the internet. A good first source for more info is Rich Trouton's excellent Mac management blog, derflounder. An introduction can be found at &lt;https://derflounder.wordpress.com/2015/02/02/managing-yosemites-filevault-2-with-fdesetup/&gt;

Detection:

A bash script is used to determine the status of FileVault on the device.

Remediation:

A bash script is used to enable FileVault, and run an ldms tool, ldsubmitclientdata, to securely send the recovery key to the Ivanti server, where it is stored in a secure table. Because the table is independent of inventory, records are not removed when a device is removed from inventory.

fdesetup enable -defer is called, which (with the options we have selected in this content) forces the user to complete the process at next login. With the defer option, fdesetup doesn't fail until the user actually tries to complete the process, so the script tries to be clever, and detect the most common failure modes beforehand.

To enable FileVault on a device, one of the following must be true: the boot volume is a CoreStorage volume, or a Recovery HD must exist. The script makes sure at least one of these is true, and fails if both are false.

The Ivanti tool ldnotify is used to provide user information.

ldsubmitclientdata params are dataname (for the core database, which shouldn't be changed), datafile, which is the full path to the recovery key file (must match the -defer parameter for fdesetup), and retry, the number of times that ldsubmitclientdata will try to submit the recovery key to the core server. The recovery key file will not be deleted from the managed device until it has been successfully submitted to the core.</Description>
  <Severity>5</Severity>
  <Vendor>Ivanti</Vendor>
  <MoreInfoURL />
  <FAQURL />
  <Type>Configuration</Type>
</Vulnerability>
