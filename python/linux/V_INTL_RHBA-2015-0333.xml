<?xml version="1.0"?>
<Vulnerability xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Lang="INTL" Vul_ID="RHBA-2015-0333" Revision="1" CVE_ID="">
  <Status>Enabled</Status>
  <Patches>
    <Patch UniqueFilename="*perl-LDAP-0.56-3.el7.noarch.rpm" Silent="CRSNo" Reboot="RNo" Download="DManual">
      <Name>perl-LDAP-0.56-3.el7.noarch.rpm</Name>
      <Comments />
      <URL />
      <State>Enabled</State>
      <Files>
        <File>
          <Path>perl-LDAP::noarch</Path>
          <FileDate>0001-01-01T00:00:00.0000000</FileDate>
          <FileSize>0</FileSize>
          <Checksum>9730afdbe1923adbcb0eb8e64a5b8e9d82176c6a5e59c76c66e9b71a29d06c5f</Checksum>
          <Version>0.56-3.el7</Version>
          <CommandID>e</CommandID>
          <Flags>P</Flags>
        </File>
      </Files>
      <Products>
        <ID>46343</ID>
      </Products>
      <Platforms>
        <ID>rhel7_x86_64</ID>
      </Platforms>
      <CustVars />
      <Cmds>
        <Cmd Type="shellscript">
          <Args>
            <Arg N="scriptcode" V="#!/bin/bash&#xA;&#xA;function updatepk()&#xA;{&#xA; if [ ! -z $1 ]; then&#xA;   if [ -e /var/run/yum.pid ];then &#xA;    exit 10  &#xA;   fi&#xA;   result=`yum -y update $1 2&gt;&amp;1` &#xA;   status=$? &#xA;   commandexist=`echo $result | grep -E &quot;yum: command not found&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;    commandexist=`echo $result | grep -E &quot;yum: No such file or directory&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;lock /var/run/yum.pid&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;/var/run/yum.pid: another copy is running&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;There was an error communicating with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;This system is not registered with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;    isnotconnected=`echo $result | grep -E &quot;No Repositories Available to Set Up&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isnotconnected=`echo $result | grep -E &quot;Error Class Code: 9 Error Class Info: Invalid System Credentials&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isscriptletfailed=`echo $result | grep -E &quot;error:&quot; | grep -E &quot;scriptlet failed, exit status 255&quot;`&#xA;    if [ &quot;$isscriptletfailed&quot; != &quot;&quot; ]; then&#xA;     exit 6&#xA;   fi&#xA;   if [ $status -ne 0 ];then&#xA;     exit 7&#xA;   fi &#xA; fi&#xA;}&#xA;updatepk perl-LDAP  &#xA;&#xA;exit 0" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
  </Patches>
  <PublishDate>2015-03-05T00:00:00.0000000</PublishDate>
  <Title>perl-LDAP bug fix update</Title>
  <Description>
        
The perl-LDAP package provides a collection of modules that implements an LDAP services API for Perl programs. The module may be used to search directories or perform maintenance functions such as adding, deleting, or modifying entries.
This update fixes the following bugs:
 The Net::LDAP Perl module is used for connecting to an LDAP server. When the module was used without specifying a list of allowed Secure Sockets Layer (SSL) ciphers, the SSL client accepted all SSL ciphers, even those that were not enabled by default by the OpenSSL cryptographic library. With this update, Net::LDAP has been modified to not request all ciphers by default. As a result, LDAP clients now use the default OpenSSL list of allowed ciphers if not specified explicitly otherwise. (BZ#1091316)
 When using a Perl LDAP client with Simple Authentication and Security Layer (SASL) mechanism, the LDAP server could receive corrupted LDAP queries. This was because the Net::LDAP Perl module always passed an incorrect static value of 1500 bytes as a query length to the syswrite() function, which could be redefined by other protocol layers, such as SASL. The underlying source code has been modified to fix this bug, and Net::LDAP no longer sends corrupted LDAP queries to the server. (BZ#1104243)
Users of perl-LDAP are advised to upgrade to this updated package, which fixes these bugs.
        Note for remediation: Please disable the SELinux for RHEL 4/5 when repairing, or some rpm packages will fail to install.</Description>
  <Severity>5</Severity>
  <Vendor>Redhat</Vendor>
  <MoreInfoURL>https://access.redhat.com/errata/RHBA-2015:0333</MoreInfoURL>
  <FAQURL />
</Vulnerability>