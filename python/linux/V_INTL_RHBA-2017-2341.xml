<?xml version="1.0"?>
<Vulnerability xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Lang="INTL" Vul_ID="RHBA-2017-2341" Revision="1" CVE_ID="">
  <Status>Enabled</Status>
  <Patches>
    <Patch UniqueFilename="*virtio-win-1.9.1-0.el7.noarch.rpm" Silent="CRSNo" Reboot="RNo" Download="DManual">
      <Name>virtio-win-1.9.1-0.el7.noarch.rpm</Name>
      <Comments />
      <URL />
      <State>Enabled</State>
      <Files>
        <File>
          <Path>virtio-win::noarch</Path>
          <FileDate>0001-01-01T00:00:00.0000000</FileDate>
          <FileSize>0</FileSize>
          <Checksum>ffe22b5c386c7644ed310a74f1a6597a086caf1891b464471eebef2828d4647b</Checksum>
          <Version>1.9.1-0.el7</Version>
          <CommandID>e</CommandID>
          <Flags>P</Flags>
        </File>
      </Files>
      <Products>
        <ID>32525</ID>
      </Products>
      <Platforms>
        <ID>rhel7_x86_64</ID>
      </Platforms>
      <CustVars />
      <Cmds>
        <Cmd Type="shellscript">
          <Args>
            <Arg N="scriptcode" V="#!/bin/bash&#xA;&#xA;function updatepk()&#xA;{&#xA; if [ ! -z $1 ]; then&#xA;   if [ -e /var/run/yum.pid ];then &#xA;    exit 10  &#xA;   fi&#xA;   result=`yum -y update $1 2&gt;&amp;1` &#xA;   status=$? &#xA;   commandexist=`echo $result | grep -E &quot;yum: command not found&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;    commandexist=`echo $result | grep -E &quot;yum: No such file or directory&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;lock /var/run/yum.pid&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;/var/run/yum.pid: another copy is running&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;There was an error communicating with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;This system is not registered with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;    isnotconnected=`echo $result | grep -E &quot;No Repositories Available to Set Up&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isnotconnected=`echo $result | grep -E &quot;Error Class Code: 9 Error Class Info: Invalid System Credentials&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isscriptletfailed=`echo $result | grep -E &quot;error:&quot; | grep -E &quot;scriptlet failed, exit status 255&quot;`&#xA;    if [ &quot;$isscriptletfailed&quot; != &quot;&quot; ]; then&#xA;     exit 6&#xA;   fi&#xA;   if [ $status -ne 0 ];then&#xA;     exit 7&#xA;   fi &#xA; fi&#xA;}&#xA;updatepk virtio-win  &#xA;&#xA;exit 0" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
  </Patches>
  <PublishDate>2017-08-01T00:00:00.0000000</PublishDate>
  <Title>virtio-win bug fix and enhancement update</Title>
  <Description>
        
The virtio-win package provides paravirtualized network drivers for most Microsoft Windows operating systems. Paravirtualized drivers are virtualization-aware drivers used by fully virtualized guests running on Red Hat Enterprise Linux. Fully virtualized guests using the paravirtualized drivers gain significantly better I/O performance than fully virtualized guests running without the drivers. 
This update adds the following enhancements:
 This update adds the virtio-input driver, which enables using the following input devices on Windows 7 and later virtual machines:
 virtio-keyboard-pci
 virtio-mouse-pci
 virtio-tablet-pci
 virtio-input-host-pci
(BZ#1357406)
 The qemufwcfg driver has been added for the built-in firmware configuration (fw_cfg) system device on Windows 10 and Windows Server 2016 guests. As a result, fw_cfg devices are no longer shown as unrecognized in the Device Manager on these guests. (BZ#1421258)
 The smbus driver has been added for the built-in SMBus device on Windows 2008 guests. As a result, SMBus devices are no longer shown as unrecognized in the Device Manager on these guests. (BZ#1451652)
 The performance of the NetKVM driver (virtio-net) has been significantly improved. (BZ#1388920)
 The virtio-win driver now supports the VIRTIO_NET_F_GUEST_ANNOUNCE feature, which, if configured, ensures that ARP packets are recognized by the network when performing live migration of Windows guests. As a result, packet loss during the migration is significantly decreased. (BZ#1411764, BZ#1431561)
 This update removes the hard-coded limit of 31 supported virtual serial ports. As a result, ports 31 and above can be used on Windows guests, and the number of ports is only limited by the host. (BZ#1370351)
 When using the virtio_balloon driver for memory ballooning, it is now possible to obtain a more accurate amount of free memory available to a guest. (BZ#1369353)
 The NetKVM driver is now able to obtain the maximum transmission unit (MTU) of a host and apply it to Windows guests running on this host. As a result, the user can optimize the guest's network interface controller (NIC) when the host MTU value is different than the default 1500 bytes. (BZ#1456403)
In addition, this update fixes the following bugs:
 Several compatibility problems on the Intel Q35 machine type with the Open Virtual Machine Firmware (OVMF) have been fixed. (BZ#1393772, BZ#1408771, BZ#1392693, BZ#1392719, BZ#1393140)
 The qemupciserial driver is now properly signed and works on 64-bit Windows guests. (BZ#1218449)
 Previously, on Windows guests with a high number of operation queues, the virtio-win-prewhql driver failed to start, which disabled the guest network. With this update, Windows guests now handle being allocated with only a single message-signaled interrupts X (MSIX) vector, which ensures the virtio-win-prewhql driver starts properly, and thus prevents the described problem. (BZ#1372174)
Users of virto-win are advised to upgrade to these updated packages, which fix these bugs and add these enhancements.
        Note for remediation: Please disable the SELinux for RHEL 4/5 when repairing, or some rpm packages will fail to install.</Description>
  <Severity>5</Severity>
  <Vendor>Redhat</Vendor>
  <MoreInfoURL>https://access.redhat.com/errata/RHBA-2017:2341</MoreInfoURL>
  <FAQURL />
</Vulnerability>