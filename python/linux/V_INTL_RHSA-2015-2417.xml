<?xml version="1.0"?>
<Vulnerability xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Lang="INTL" Vul_ID="RHSA-2015-2417" Revision="2" CVE_ID="CVE-2014-8169">
  <Status>Deleted</Status>
  <Groups />
  <DependsOn />
  <Patches>
    <Patch UniqueFilename="*autofs-5.0.7-54.el7.x86_64.rpm" Hash="" Silent="CRSNo" Reboot="RNo" Download="DManual">
      <Name>autofs-5.0.7-54.el7.x86_64.rpm</Name>
      <Comments />
      <URL />
      <State>Enabled</State>
      <Files>
        <File>
          <Path>autofs::x86_64</Path>
          <FileDate>0001-01-01T00:00:00.0000000+00:00</FileDate>
          <FileSize>0</FileSize>
          <Checksum>bb8a8b4efb005a3fb5eec1f634e268dc</Checksum>
          <Version>5.0.7-54.el7</Version>
          <CommandID>e</CommandID>
          <Flags>P</Flags>
        </File>
      </Files>
      <RegKeys />
      <Products>
        <ID>13221</ID>
      </Products>
      <Platforms>
        <ID>rhel7_x86_64</ID>
      </Platforms>
      <CustVars />
      <Cmds>
        <Cmd Type="shellscript">
          <Args>
            <Arg N="scriptcode" V="#!/bin/bash&#xA;&#xA;function updatepk()&#xA;{&#xA; if [ ! -z $1 ]; then&#xA;   if [ -e /var/run/yum.pid ];then &#xA;    exit 10  &#xA;   fi&#xA;   result=`yum -y update $1 2&gt;&amp;1` &#xA;   status=$? &#xA;   commandexist=`echo $result | grep -E &quot;yum: command not found&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;    commandexist=`echo $result | grep -E &quot;yum: No such file or directory&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;lock /var/run/yum.pid&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;/var/run/yum.pid: another copy is running&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;There was an error communicating with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;This system is not registered with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;    isnotconnected=`echo $result | grep -E &quot;No Repositories Available to Set Up&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isnotconnected=`echo $result | grep -E &quot;Error Class Code: 9 Error Class Info: Invalid System Credentials&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isscriptletfailed=`echo $result | grep -E &quot;error:&quot; | grep -E &quot;scriptlet failed, exit status 255&quot;`&#xA;    if [ &quot;$isscriptletfailed&quot; != &quot;&quot; ]; then&#xA;     exit 6&#xA;   fi&#xA;   if [ $status -ne 0 ];then&#xA;     exit 7&#xA;   fi &#xA; fi&#xA;}&#xA;updatepk autofs  &#xA;&#xA;exit 0" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
    <Patch UniqueFilename="*autofs-debuginfo-5.0.7-54.el7.x86_64.rpm" Hash="" Silent="CRSNo" Reboot="RNo" Download="DManual">
      <Name>autofs-debuginfo-5.0.7-54.el7.x86_64.rpm</Name>
      <Comments />
      <URL />
      <State>Enabled</State>
      <Files>
        <File>
          <Path>autofs-debuginfo::x86_64</Path>
          <FileDate>0001-01-01T00:00:00.0000000+00:00</FileDate>
          <FileSize>0</FileSize>
          <Checksum>91e456d8e46fe1df6016aa5f63ad1041</Checksum>
          <Version>5.0.7-54.el7</Version>
          <CommandID>e</CommandID>
          <Flags>P</Flags>
        </File>
      </Files>
      <RegKeys />
      <Products>
        <ID>32528</ID>
      </Products>
      <Platforms>
        <ID>rhel7_x86_64</ID>
      </Platforms>
      <CustVars />
      <Cmds>
        <Cmd Type="shellscript">
          <Args>
            <Arg N="scriptcode" V="#!/bin/bash&#xA;&#xA;function updatepk()&#xA;{&#xA; if [ ! -z $1 ]; then&#xA;   if [ -e /var/run/yum.pid ];then &#xA;    exit 10  &#xA;   fi&#xA;   result=`yum -y update $1 2&gt;&amp;1` &#xA;   status=$? &#xA;   commandexist=`echo $result | grep -E &quot;yum: command not found&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;    commandexist=`echo $result | grep -E &quot;yum: No such file or directory&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;lock /var/run/yum.pid&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;/var/run/yum.pid: another copy is running&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;There was an error communicating with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;This system is not registered with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;    isnotconnected=`echo $result | grep -E &quot;No Repositories Available to Set Up&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isnotconnected=`echo $result | grep -E &quot;Error Class Code: 9 Error Class Info: Invalid System Credentials&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isscriptletfailed=`echo $result | grep -E &quot;error:&quot; | grep -E &quot;scriptlet failed, exit status 255&quot;`&#xA;    if [ &quot;$isscriptletfailed&quot; != &quot;&quot; ]; then&#xA;     exit 6&#xA;   fi&#xA;   if [ $status -ne 0 ];then&#xA;     exit 7&#xA;   fi &#xA; fi&#xA;}&#xA;updatepk autofs-debuginfo  &#xA;&#xA;exit 0" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
  </Patches>
  <PublishDate>2015-11-19T00:00:00.0000000+00:00</PublishDate>
  <Title>Moderate: autofs security, bug fix and enhancement update</Title>
  <Description>Updated autofs packages that fix one security issue, several bugs, and add 
 one enhancement are now available for Red Hat Enterprise Linux 7. 
 
 Red Hat Product Security has rated this update as having Moderate security 
 impact. A Common Vulnerability Scoring System (CVSS) base score, which 
 gives a detailed severity rating, is available from the CVE link in the 
 References section. 
 The autofs utility controls the operation of the automount daemon. The 
 daemon automatically mounts file systems when in use and unmounts them when 
 they are not busy. 
 
 It was found that program-based automounter maps that used interpreted 
 languages such as Python used standard environment variables to locate 
 and load modules of those languages. A local attacker could potentially use 
 this flaw to escalate their privileges on the system. (CVE-2014-8169) 
 
 Note: This issue has been fixed by adding the "AUTOFS_" prefix to the 
 affected environment variables so that they are not used to subvert the 
 system. A configuration option ("force_standard_program_map_env") to 
 override this prefix and to use the environment variables without the 
 prefix has been added. In addition, warnings have been added to the manual 
 page and to the installed configuration file. Now, by default the standard 
 variables of the program map are provided only with the prefix added to 
 its name. 
 
 Red Hat would like to thank the Georgia Institute of Technology for 
 reporting this issue. 
 
 Notably, this update fixes the following bugs: 
 
 * When the "ls *" command was run in the root of an indirect mount, autofs 
 attempted to literally mount the wildcard character (*) causing it to be 
 added to the negative cache. If done before a valid mount, autofs then 
 failed on further mount attempts inside the mount point, valid or not. This 
 has been fixed, and wildcard map entries now function in the described 
 situation. (BZ#1166457) 
 
 * When autofs encountered a syntax error consisting of a duplicate entry in 
 a multimap entry, it reported an error and did not mount the map entry. 
 With this update, autofs has been amended to report the problem in the log 
 to alert the system administrator and use the last seen instance of the 
 duplicate entry rather than fail. (BZ#1205600) 
 
 * In the ldap and sss lookup modules, the map reading functions did not 
 distinguish between the "no entry found" and "service not available" 
 errors. Consequently, when the "service not available" response was 
 returned from a master map read, autofs did not update the mounts. 
 An "entry not found" return does not prevent the map update, so the ldap 
 and sss lookup modules were updated to distinguish between these two 
 returns and now work as expected. (BZ#1233065) 
 
 In addition, this update adds the following enhancement: 
 
 * The description of the configuration parameter map_hash_table_size was 
 missing from the autofs.conf(5) man page and its description in the 
 configuration file comments was insufficient. A description of the 
 parameter has been added to autofs.conf(5), and the configuration file 
 comments have been updated. (BZ#1238573) 
 
 All autofs users are advised to upgrade to these updated packages, which 
 contain backported patches to correct these issues and add this 
 enhancement. 
 
 Note for remediation: Please disable the SELinux for RHEL 4/5 when repairing, or some rpm packages will fail to install.</Description>
  <Severity>3</Severity>
  <Vendor>Redhat</Vendor>
  <MoreInfoURL>https://rhn.redhat.com/errata/RHSA-2015-2417.html</MoreInfoURL>
  <FAQURL />
</Vulnerability>