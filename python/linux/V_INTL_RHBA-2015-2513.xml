<?xml version="1.0"?>
<Vulnerability xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Lang="INTL" Vul_ID="RHBA-2015-2513" Revision="1" CVE_ID="">
  <Status>Enabled</Status>
  <Patches>
    <Patch UniqueFilename="*virtio-win-1.8.0-4.el7.noarch.rpm" Silent="CRSNo" Reboot="RNo" Download="DManual">
      <Name>virtio-win-1.8.0-4.el7.noarch.rpm</Name>
      <Comments />
      <URL />
      <State>Enabled</State>
      <Files>
        <File>
          <Path>virtio-win::noarch</Path>
          <FileDate>0001-01-01T00:00:00.0000000</FileDate>
          <FileSize>0</FileSize>
          <Checksum>90d40c7595f5361999bd34bb0efcee926e187dd3b6158556e5e1b9a709a0f076</Checksum>
          <Version>1.8.0-4.el7</Version>
          <CommandID>e</CommandID>
          <Flags>P</Flags>
        </File>
      </Files>
      <Products>
        <ID>32525</ID>
      </Products>
      <Platforms>
        <ID>rhel7_x86_64</ID>
      </Platforms>
      <CustVars />
      <Cmds>
        <Cmd Type="shellscript">
          <Args>
            <Arg N="scriptcode" V="#!/bin/bash&#xA;&#xA;function updatepk()&#xA;{&#xA; if [ ! -z $1 ]; then&#xA;   if [ -e /var/run/yum.pid ];then &#xA;    exit 10  &#xA;   fi&#xA;   result=`yum -y update $1 2&gt;&amp;1` &#xA;   status=$? &#xA;   commandexist=`echo $result | grep -E &quot;yum: command not found&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;    commandexist=`echo $result | grep -E &quot;yum: No such file or directory&quot;`&#xA;   if [ &quot;$commandexist&quot; != &quot;&quot; ]; then&#xA;     exit 8&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;lock /var/run/yum.pid&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   islock=`echo $result | grep -E &quot;/var/run/yum.pid: another copy is running&quot;`&#xA;   &#xA;   if [ &quot;$islock&quot; != &quot;&quot; ]; then&#xA;     exit 10&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;There was an error communicating with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;   isnotconnected=`echo $result | grep -E &quot;This system is not registered with RHN&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;   &#xA;    isnotconnected=`echo $result | grep -E &quot;No Repositories Available to Set Up&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isnotconnected=`echo $result | grep -E &quot;Error Class Code: 9 Error Class Info: Invalid System Credentials&quot;`&#xA;   if [ &quot;$isnotconnected&quot; != &quot;&quot; ]; then&#xA;     exit 9&#xA;   fi&#xA;    isscriptletfailed=`echo $result | grep -E &quot;error:&quot; | grep -E &quot;scriptlet failed, exit status 255&quot;`&#xA;    if [ &quot;$isscriptletfailed&quot; != &quot;&quot; ]; then&#xA;     exit 6&#xA;   fi&#xA;   if [ $status -ne 0 ];then&#xA;     exit 7&#xA;   fi &#xA; fi&#xA;}&#xA;updatepk virtio-win  &#xA;&#xA;exit 0" />
          </Args>
        </Cmd>
      </Cmds>
    </Patch>
  </Patches>
  <PublishDate>2015-11-24T00:00:00.0000000</PublishDate>
  <Title>virtio-win bug fix and enhancement update</Title>
  <Description>
        
The virtio-win package provides paravirtualized network drivers for most Microsoft Windows operating systems. Paravirtualized drivers are virtualization-aware drivers used by fully virtualized guests running on Red Hat Enterprise Linux. Fully virtualized guests using the paravirtualized drivers gain significantly better I/O performance than fully virtualized guests running without the drivers.
This update fixes the following bugs:
 In some cases, attaching more than four Logical Unit Numbers (LUNs) to the same virtio-scsi controller caused the guest to terminate unexpectedly with a stop error (also known as the blue screen of death). This update adds the pending SCSI Request Block (SRB) queue, which keeps unsubmitted SRBs for future processing, instead of failing them. As a result, the virtio-scsi device driver is able to service up to 254 LUNs attached to the same controller. (BZ#1195920)
 Previously, Windows guests in some cases issued out-of-bounds read and write requests to a virtio device, which caused the guest to become unresponsive. Now, the Windows virtio-blk device drive performs logical block addressing (LBA) sanity checks before submitting requests to QEMU, and does not submit requests that are out-of-bounds. As a result, the described problem no longer occurs. (BZ#1195487)
 Using the "netsh" command now properly displays device names regardless of the number of network devices plugged in to the system. (BZ#1109027)
In addition, this update adds the following enhancements:
 The virtio-win package now contains the qxl driver for Windows Server 2008 R2, and the driver thus does not have to be downloaded manually. (BZ#1170106)
 The NetKVM driver now supports the virtio multi-queue feature. In combination with the Windows OS receives-side scaling (RSS) feature, this enables enhanced performance optimization. (BZ#1096505)
Users of virtio-win are advised to upgrade to this updated package, which fixes these bugs and adds these enhancements.
        Note for remediation: Please disable the SELinux for RHEL 4/5 when repairing, or some rpm packages will fail to install.</Description>
  <Severity>5</Severity>
  <Vendor>Redhat</Vendor>
  <MoreInfoURL>https://access.redhat.com/errata/RHBA-2015:2513</MoreInfoURL>
  <FAQURL />
</Vulnerability>